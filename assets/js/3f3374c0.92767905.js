(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(h,o(o({ref:t},s),{},{components:n})):a.createElement(h,o({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4500:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return m}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o={id:"createSlice",title:"createSlice",sidebar_label:"createSlice"},c=void 0,p={unversionedId:"api/createSlice",id:"api/createSlice",isDocsHomePage:!1,title:"createSlice",description:"A function that accepts a name, an initialState, and optionally a parent and creates a Slice object. The default parent is the rootSliceGroup.",source:"@site/docs/api/createSlice.md",sourceDirName:"api",slug:"/api/createSlice",permalink:"/slices-for-redux/docs/api/createSlice",version:"current",frontMatter:{id:"createSlice",title:"createSlice",sidebar_label:"createSlice"},sidebar:"docs",previous:{title:"rootSliceGroup",permalink:"/slices-for-redux/docs/api/rootSliceGroup"},next:{title:"Slice",permalink:"/slices-for-redux/docs/api/Slice"}},l=[{value:"Parameters",id:"parameters",children:[{value:"<code>actionTypeFormat</code>",id:"actiontypeformat",children:[]},{value:"<code>initialState</code>",id:"initialstate",children:[]},{value:"<code>immer</code>",id:"immer",children:[]},{value:"<code>name</code>",id:"name",children:[]},{value:"<code>parent</code>",id:"parent",children:[]}]},{value:"Return Value",id:"return-value",children:[]}],s={toc:l};function m(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A function that accepts a ",(0,i.kt)("em",{parentName:"p"},"name"),", an ",(0,i.kt)("em",{parentName:"p"},"initialState"),", and optionally a ",(0,i.kt)("em",{parentName:"p"},"parent")," and creates a ",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/Slice"},(0,i.kt)("inlineCode",{parentName:"a"},"Slice"))," object. The default ",(0,i.kt)("em",{parentName:"p"},"parent")," is the ",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/rootSliceGroup"},(0,i.kt)("inlineCode",{parentName:"a"},"rootSliceGroup")),"."),(0,i.kt)("p",null,"Note that case-reducers and extraReducers are added to the slice object after it has been created. This is in contrast to the RTK ",(0,i.kt)("a",{href:"https://redux-toolkit.js.org/api/createSlice",target:"_blank"},"createSlice")," where case-reducers and extraReducers are part of the configuration object."),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"createSlice")," accepts a single configuration object parameter, with the following options:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"function createSlice({\n  /**\n   * Optional - Defines how an _actionType_ is generated given\n   * the _actionKey_ and the names.\n   */\n  actionTypeFormat?: 'RTK' | ActionTypeFormatFunc;\n\n  /**\n   * Optional - The Slice's reducer uses, or not uses 'immer'.\n   */\n  immer?: boolean;\n\n  /**\n   * The initial state returned by the Slice's reducer and selector\n   * when the store state has no value for this slice of state.\n   */\n  initialState: any;\n\n  /**\n   * The Slice's name.\n   */\n  name: string;\n\n  /**\n   * Optional - The Slice's parent.\n   */\n  parent?: SliceParent | string;\n})\n")),(0,i.kt)("h3",{id:"actiontypeformat"},(0,i.kt)("inlineCode",{parentName:"h3"},"actionTypeFormat")),(0,i.kt)("p",null,"Optional - Defines how an ",(0,i.kt)("em",{parentName:"p"},"actionType")," is generated given\nthe ",(0,i.kt)("em",{parentName:"p"},"actionKey")," and the names.",(0,i.kt)("br",{parentName:"p"}),"\n","The names is the list of the ancestors SliceGroups' ",(0,i.kt)("em",{parentName:"p"},"name")," and the Slice's ",(0,i.kt)("em",{parentName:"p"},"name"),"."),(0,i.kt)("p",null,"The default format is: ",(0,i.kt)("inlineCode",{parentName:"p"},"${actionKey}_${[...names].reverse().join('_')}"),(0,i.kt)("br",{parentName:"p"}),"\n","When value is: 'RTK' it uses Redux Toolkit convention: ",(0,i.kt)("inlineCode",{parentName:"p"},"${names.join('/')}/${actionKey}")),(0,i.kt)("p",null,"Otherwise the value must be a function with this signature:",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"(actionKey: string, names: string[]) => string")),(0,i.kt)("h3",{id:"initialstate"},(0,i.kt)("inlineCode",{parentName:"h3"},"initialState")),(0,i.kt)("p",null,"The initial state value for this slice of state.\nIt is returned by the Slice's ",(0,i.kt)("em",{parentName:"p"},"reducer")," and ",(0,i.kt)("em",{parentName:"p"},"selector"),"\nwhen the store state has no value for this slice of state."),(0,i.kt)("h3",{id:"immer"},(0,i.kt)("inlineCode",{parentName:"h3"},"immer")),(0,i.kt)("p",null,"Optional - The Slice's reducer uses ",(0,i.kt)("a",{href:"https://github.com/immerjs/immer",target:"_blank"},"immer"),".",(0,i.kt)("br",{parentName:"p"}),"\n","Default value is: ",(0,i.kt)("strong",{parentName:"p"},"true"),(0,i.kt)("br",{parentName:"p"}),"\n","When migrating to ",(0,i.kt)("strong",{parentName:"p"},"Slices for Redux"),", if you discover that some some of your existing code is not compatible with immer you can\n",(0,i.kt)("strong",{parentName:"p"},"temporarily ignore")," it by set the ",(0,i.kt)("em",{parentName:"p"},"immer")," option to false until you can fix it.",(0,i.kt)("br",{parentName:"p"}),"\n","When ",(0,i.kt)("em",{parentName:"p"},"immer")," is false, a warning will appear in the console."),(0,i.kt)("h3",{id:"name"},(0,i.kt)("inlineCode",{parentName:"h3"},"name")),(0,i.kt)("p",null,"A string name for this slice of state.\nAlso used by ",(0,i.kt)("em",{parentName:"p"},"actionTypeFormat")," to generated the ",(0,i.kt)("em",{parentName:"p"},"actionType")," constants."),(0,i.kt)("h3",{id:"parent"},(0,i.kt)("inlineCode",{parentName:"h3"},"parent")),(0,i.kt)("p",null,"Optional - The Slice's parent."),(0,i.kt)("p",null,"Default value is: ",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/rootSliceGroup"},(0,i.kt)("inlineCode",{parentName:"a"},"rootSliceGroup")),(0,i.kt)("br",{parentName:"p"}),"\n","When ",(0,i.kt)("em",{parentName:"p"},"parent")," is ",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/rootSliceGroup"},(0,i.kt)("inlineCode",{parentName:"a"},"rootSliceGroup"))," the created ",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/Slice"},(0,i.kt)("inlineCode",{parentName:"a"},"Slice")),"'s ",(0,i.kt)("em",{parentName:"p"},"reducer"),' will be added to the "root-reducer" (the reducer of the rootSliceGroup).',(0,i.kt)("br",{parentName:"p"}),"\n","When ",(0,i.kt)("em",{parentName:"p"},"parent")," is a ",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/SliceParent"},(0,i.kt)("inlineCode",{parentName:"a"},"SliceParent")),", the created ",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/Slice"},(0,i.kt)("inlineCode",{parentName:"a"},"Slice")),"'s ",(0,i.kt)("em",{parentName:"p"},"reducer")," will be added to that parent's ",(0,i.kt)("em",{parentName:"p"},"reducer"),".",(0,i.kt)("br",{parentName:"p"}),"\n","When ",(0,i.kt)("em",{parentName:"p"},"parent")," is a string, it represents the parent's path, and the created\n",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/Slice"},(0,i.kt)("inlineCode",{parentName:"a"},"Slice")),"'s reducer will need to be manually added to that parent's reducer."),(0,i.kt)("h2",{id:"return-value"},"Return Value"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"createSlice")," returns a ",(0,i.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/Slice"},(0,i.kt)("inlineCode",{parentName:"a"},"Slice"))," object."))}m.isMDXComponent=!0}}]);