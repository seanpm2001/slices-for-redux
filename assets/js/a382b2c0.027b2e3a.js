(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[273],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},s=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(t),m=o,f=s["".concat(l,".").concat(m)]||s[m]||d[m]||a;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=s;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},7315:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var n=t(2122),o=t(9756),a=(t(7294),t(3905)),i={id:"rootSliceGroup",title:"rootSliceGroup",sidebar_label:"rootSliceGroup"},c=void 0,l={unversionedId:"api/rootSliceGroup",id:"api/rootSliceGroup",isDocsHomePage:!1,title:"rootSliceGroup",description:"The rootSliceGroup is the default parent unless a different parent is given when creating a Slice or SliceGroup.",source:"@site/docs/api/rootSliceGroup.md",sourceDirName:"api",slug:"/api/rootSliceGroup",permalink:"/slices-for-redux/docs/api/rootSliceGroup",version:"current",frontMatter:{id:"rootSliceGroup",title:"rootSliceGroup",sidebar_label:"rootSliceGroup"},sidebar:"docs",previous:{title:"Mutable Reducers",permalink:"/slices-for-redux/docs/concepts/mutable-reducers"},next:{title:"createSlice",permalink:"/slices-for-redux/docs/api/createSlice"}},p=[{value:"Properties",id:"properties",children:[{value:"<code>addReducers</code>",id:"addreducers",children:[]},{value:"<code>path</code>",id:"path",children:[]},{value:"<code>reducer</code>",id:"reducer",children:[]}]},{value:"Example",id:"example",children:[]},{value:"Other SliceGroups",id:"other-slicegroups",children:[]}],u={toc:p};function d(e){var r=e.components,t=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"rootSliceGroup")," is the default ",(0,a.kt)("inlineCode",{parentName:"p"},"parent")," unless a different ",(0,a.kt)("inlineCode",{parentName:"p"},"parent")," is given when creating a ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/Slice"},(0,a.kt)("inlineCode",{parentName:"a"},"Slice"))," or ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/SliceGroup"},(0,a.kt)("inlineCode",{parentName:"a"},"SliceGroup")),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"rootSliceGroup"),"'s ",(0,a.kt)("inlineCode",{parentName:"p"},"reducer"),' is the "root-reducer" that must be passed to createStore from Redux or to configureStore from Redux Toolkit.'),(0,a.kt)("p",null,"Other reducers are added to this ",(0,a.kt)("inlineCode",{parentName:"p"},"reducer"),' (the "root-reducer") using the ',(0,a.kt)("inlineCode",{parentName:"p"},"addReducers")," function of the ",(0,a.kt)("inlineCode",{parentName:"p"},"rootSliceGroup"),". But in most cases this will be done automatically when creating new ",(0,a.kt)("inlineCode",{parentName:"p"},"Slices")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"SliceGroups")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"createSlice")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"createSliceGroup"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"rootSliceGroup")," is an object that looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    addReducers: (reducers: Reducers) => void,\n    path: '/',\n    reducer: Reducer, // the \"root-reducer\"\n}\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"addreducers"},(0,a.kt)("inlineCode",{parentName:"h3"},"addReducers")),(0,a.kt)("p",null,'A function that adds one or more reducer to the "root-reducer".',(0,a.kt)("br",{parentName:"p"}),"\n","Accepts an object where the keys are names and the values are reducer functions."),(0,a.kt)("h3",{id:"path"},(0,a.kt)("inlineCode",{parentName:"h3"},"path")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"rootSliceGroup"),"'s path value is: '/'"),(0,a.kt)("h3",{id:"reducer"},(0,a.kt)("inlineCode",{parentName:"h3"},"reducer")),(0,a.kt)("p",null,'This is the "root-reducer".',(0,a.kt)("br",{parentName:"p"}),"\n","This ",(0,a.kt)("inlineCode",{parentName:"p"},"reducer")," must be passed to ",(0,a.kt)("a",{href:"https://redux.js.org/api/createstore",target:"_blank"},"createStore"),"\nfrom Redux or to ",(0,a.kt)("a",{href:"https://redux-toolkit.js.org/api/configurestore",target:"_blank"},"configureStore"),"\nfrom Redux Toolkit. We recommend using ",(0,a.kt)("a",{href:"https://redux-toolkit.js.org/api/configurestore",target:"_blank"},"configureStore"),'\nfrom Redux Toolkit.\nThis reducer is a "mutable combine reducer".',(0,a.kt)("br",{parentName:"p"}),"\n","Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"rootSliceGroup"),"'s ",(0,a.kt)("inlineCode",{parentName:"p"},"addReducers")," function to add reducers to it."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { configureStore } from '@reduxjs/toolkit';\nimport { rootSliceGroup } from 'slices-for-redux';\n\n// Add reducers before creating the store\nrootSliceGroup.addReducers({\n  slice1: reducer1,\n});\n\nconst store = configureStore({\n  reducer: rootSliceGroup.reducer,\n});\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// As needed add additional reducers after the store was created\n// E.g. when a lazy loaded module is loaded.\nrootSliceGroup.addReducers({\n  slice2: reducer2,\n});\n")),(0,a.kt)("h2",{id:"other-slicegroups"},"Other SliceGroups"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"rootSliceGroup")," is the default top most group of Slices."),(0,a.kt)("p",null,"By default ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/createSlice"},(0,a.kt)("inlineCode",{parentName:"a"},"createSlice()"))," creates a ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/Slice"},(0,a.kt)("inlineCode",{parentName:"a"},"Slice")),' that manages a "slice of state" that exists directly under the root of the store state object.'),(0,a.kt)("p",null,"With ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/createSliceGroup"},(0,a.kt)("inlineCode",{parentName:"a"},"createSliceGroup()"))," one can create other ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/SliceGroup"},(0,a.kt)("inlineCode",{parentName:"a"},"SliceGroup"))," which allow grouping Slices under a group name.\nIn that case a ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/Slice"},(0,a.kt)("inlineCode",{parentName:"a"},"Slice")),' will manage a "slice of state" that exists under that ',(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/SliceGroup"},(0,a.kt)("inlineCode",{parentName:"a"},"SliceGroup")),"'s name."),(0,a.kt)("p",null,"In the rare case (not recommended) where multiple Redux stores are used, one can still use the ",(0,a.kt)("inlineCode",{parentName:"p"},"rootSliceGroup")," for one store, and then create another root ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/SliceGroup"},(0,a.kt)("inlineCode",{parentName:"a"},"SliceGroup"))," for each additional store with ",(0,a.kt)("a",{parentName:"p",href:"/slices-for-redux/docs/api/createSliceGroup"},(0,a.kt)("inlineCode",{parentName:"a"},"createSliceGroup({ name: '/' })")),"."))}d.isMDXComponent=!0}}]);